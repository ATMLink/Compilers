识别活前缀的自动机
1、文法解析
2、自动机构造

; lr0/src 目录各模块说明

1. Arena 分配相关

arena_create
    • 功能: 创建一个新的 Arena 结构体，分配指定大小的内存。
    • 作用: 初始化一个新的 Arena（内存池），为后续分配内存准备。它返回一个指向 Arena 的指针。

arena_alloc
    • 功能: 从 Arena 中分配指定大小的内存。
    • 作用: 在 Arena 内存池中按顺序分配内存，确保不会超出预定大小。如果分配成功，返回指向内存块的指针。

arena_free
    • 功能: 释放 Arena 内存池占用的内存。
    • 作用: 在程序结束时，释放 Arena 所占用的内存空间，避免内存泄漏。

2. 文法相关

grammar.h/grammar.c
    • 功能: 解析上下文无关文法，存储产生式规则、符号表等。
    • 作用: 支持动态加载文法文件，提取产生式、非终结符、终结符。

3. LR(0) 项集族 DFA构造

viable_prefix_dfa.h/viable_prefix_dfa.c
    • 功能: 构建 LR(0) 活前缀自动机（项集族 DFA），包括项集闭包、转移、状态查找、DFA 打印与释放等。
    • 作用: 根据文法自动构造 LR(0) 项集族 DFA，支持活前缀识别和分析。

4. 分析表相关

lr0_parse_table.h/lr0_parse_table.c
    • 功能: 构建 LR(0) 语法分析表。
    • 作用: 根据 DFA 和文法规则，生成 LR(0) 分析表，驱动 LR(0) 语法分析。

parse_table.h/parse_table.c
    • 功能: 通用分析表实现。
    • 作用: 支持分析表的构建和查询，便于扩展。

5. 分析工具

parse_utils.h/parse_utils.c
    • 功能: 提供 LR(0) 分析相关的辅助函数。
    • 作用: 支持项集比较、符号处理等常用操作。

6. 主程序与测试

main.c
    • 功能: 程序主入口，驱动文法加载、DFA 构建、分析表生成、活前缀识别等全流程。
    • 作用: 负责整体流程控制，支持命令行输入、调试输出。

test/
    • 功能: 单元测试与集成测试。
    • 作用: 验证各模块功能正确性。

7. 使用说明

准备文法文件 grammar.txt，格式示例：
S -> CC
C -> cC
C -> d

Windows 下编译运行示例：
gcc main.c -o main
.\main